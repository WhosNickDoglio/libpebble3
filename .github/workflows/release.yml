name: Publish release

on:
  release:
    types: [published]

jobs:
  publish-release:
    runs-on: macos-latest

    steps:
      - name: Cache build deps
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/wrapper
            ~/.konan/cache
            ~/.konan/dependencies
          key: build-deps-${{ hashFiles('~/.gradle/**') }}-${{ hashFiles('~/.konan/**') }}

      - name: Checkout source
        uses: actions/checkout@v2

      - name: Publish artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # The GITHUB_REF tag comes in the format 'refs/tags/xxx'.
        # If we split on '/' and take the 3rd value,
        # we can get the release name.
        run: |
          NEW_VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
          echo "New version: ${NEW_VERSION}"
          echo "Github username: ${GITHUB_ACTOR}"
          ./gradlew -Pversion=${NEW_VERSION} publish

      - name: Build XCFrameworks
        run: ./gradlew assembleXCFramework

      - name: Zip release XCFramework
        uses: vimtor/action-zip@v1
        with:
          files: build/XCFrameworks/release/
          dest: build/xcframework-release.zip

      - name: Zip debug XCFramework
        uses: vimtor/action-zip@v1
        with:
          files: build/XCFrameworks/debug/
          dest: build/xcframework-debug.zip

      - name: Add release artifacts
        id: release_artifacts
        uses: softprops/action-gh-release@15d2aaca23625e5b2744248f7b68fc1e6bbff48e
        with:
          tag_name: ${{ github.event.release.tag_name }}
          files: |
            build/xcframework-debug.zip
            build/xcframework-release.zip

      - name: Calculate checksums for XCFrameworks
        run: |
          cp Package.swift.template Package.swift
          echo DEBUG_CHECKSUM=$(swift package compute-checksum build/xcframework-debug.zip) >> $GITHUB_ENV
          echo RELEASE_CHECKSUM=$(swift package compute-checksum build/xcframework-release.zip) >> $GITHUB_ENV
          
      - name: Download jq
        run: |
          wget -O jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-osx-amd64
          chmod +x jq
          
      - name: Get debug url
        id: jq_debug
        run: 'echo ::set-output name=value::$(echo ${{ steps.release_artifacts.outputs.assets }} | ./jq --raw-output ".[0].browser_download_url")'
      
      - name: Get release url
        id: jq_release
        run: 'echo ::set-output name=value::$(echo ${{ steps.release_artifacts.outputs.assets }} | ./jq --raw-output ".[1].browser_download_url")'
        
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          ref: 'master'

      - name: Update swift package
        run: |
          sed -e 's|DEBUG-URL|${{ steps.jq_debug.outputs.value }}|;w Package.swift' Package.swift.template
          sed -e 's/DEBUG-CHECKSUM/${{ env.DEBUG_CHECKSUM }}/;w Package.swift.tmp' Package.swift
          sed -e 's|RELEASE-URL|${{ steps.jq_release.outputs.value }}|;w Package.swift.tmp2' Package.swift.tmp
          sed -e 's/RELEASE-CHECKSUM/${{ env.RELEASE_CHECKSUM }}/;w Package.swift' Package.swift.tmp2

      - name: Commit swift package
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add Package.swift
          git commit -m "[CI] Update swift package"
          git tag -d ${{ github.event.release.tag_name }}
          git push --delete origin ${{ github.event.release.tag_name }}
          git tag ${{ github.event.release.tag_name }}
          git push origin ${{ github.event.release.tag_name }}
